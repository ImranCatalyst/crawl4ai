version: "3.8"

###############################################################################
# Crawl4AI + bundled Redis, exposed through Traefik
# - stick this into the “Docker Compose Content (raw)” field
# - make sure you have a .llm.env file (OPENAI_API_KEY, etc.) in Coolify
# - press  Save  ➜  Redeploy
###############################################################################
services:
  crawl4ai:
    image: unclecode/crawl4ai:0.7.0-r1          # ← pinned, reproducible build

    # ── playwright / Chromium needs shared-memory ────────────────────────────
    shm_size: 1g

    # ── FastAPI / Gunicorn inside the container listens on 11235 ────────────
    ports:
      - "11235:11235"

    # ── your LLM keys live in a separate secrets file ───────────────────────
    env_file:
      - .llm.env

    environment:
      OPENAI_API_KEY:     ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY:  ${ANTHROPIC_API_KEY:-}
      GROQ_API_KEY:       ${GROQ_API_KEY:-}
      DEEPSEEK_API_KEY:   ${DEEPSEEK_API_KEY:-}
      TOGETHER_API_KEY:   ${TOGETHER_API_KEY:-}
      MISTRAL_API_KEY:    ${MISTRAL_API_KEY:-}
      GEMINI_API_TOKEN:   ${GEMINI_API_TOKEN:-}
      REDIS_URL:          redis://localhost:6379/0
      LOG_LEVEL:          info                    # switch to “debug” if needed

    volumes:
      - /dev/shm:/dev/shm                         # speed-up for Chromium

    restart: unless-stopped

    # Coolify / Traefik health probe
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11235/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 1G

    # ---------- connect to Traefik’s overlay network ----------
    networks:
      - coolify

    user: "appuser"

# global section: declare the external network so Compose doesn’t try to create it
networks:
  coolify:
    external: true
